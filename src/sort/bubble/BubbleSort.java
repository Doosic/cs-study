package sort.bubble;

public class BubbleSort {

  /*
   * - 버블정렬
   * 앞에 있는 숫자와 옆에 숫자를 비교해서 자리를 바꾸는 알고리즘
   * [4,2,3,1] -> [2,4,3,1] -> [2,3,4,1] -> [2,3,1,4] 마지막 원소 정렬 완료(다음 순회에서 제외)
   * [2,3,1,4](2와3은 자리변경 없음) -> [2,1,3,4] 마지막 원소 3 정렬 완료(다음 순회에서 제외)
   * [2,1,3,4] -> [1,2,3,4] 남은 원소가 1개이므로 정렬 완료
   *
   * 4의 자리를 찾고, 3의 자리를 찾고, 2의 자리를 찾아야 한다
   * 총 세 번(n-1)번 실행되어야 한다.
   *
   * - 시간복잡도
   * 이중 반복문이기 때문에 O(n2)으로 볼 수 있다.
   *
   * - 장점
   * 구현이 간단하다
   *
   * - 단점
   * 성능이 좋지 않다
   * */

  public BubbleSort(){};

  public int[] bubbleSortFunction(int[] arr){
    for(int i = 0; i < arr.length; i++){
      for(int j = 0; j < (arr.length - i - 1); j++){
        // 앞의 값이 뒤에 오는 값보다 크다면?
        if(arr[j] > arr[j + 1]){
          // 뒤의 값을 앞으로 옮기기 위해 임시변수에 담아준다.
          int temp = arr[j + 1];
          // 앞의 값을 뒤로 보내준다
          arr[j + 1] = arr[j];
          // 임시변수에 담아둔 뒤의 값을 앞으로 보내준다
          arr[j] = temp;
        }
      }
    }

    return arr;
  }

}
